import asyncio

from aiogram import Router, F, Bot
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, ReplyKeyboardRemove, CallbackQuery
from aiogram.enums import ChatAction

import app.keyboards as kb

router = Router()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.bot.send_chat_action(chat_id=message.from_user.id,
                                       action=ChatAction.TYPING)
    await asyncio.sleep(0.2)
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç! {message.from_user.first_name}',
                         reply_markup=kb.inline_main)


@router.message(Command('adminlist'))
async def adminlist(message: Message):
    admins = await message.bot.get_chat_administrators(chat_id=-100)
    admin_list = '\n'.join([f'–ü–æ–ª–Ω–æ–µ –∏–º—è üë§ - {admin.user.full_name}, '
                            f'username - @{admin.user.username}'
                            for admin in admins])
    await message.answer(f'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã —á–∞—Ç–∞:\n{admin_list}')


@router.message(Command("pin"))
async def pin_custom_message(message: Message, bot: Bot):
    chat_id = -100  # @username –∏–ª–∏ ID –∫–∞–Ω–∞–ª–∞
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã "/pin"
    command_parts = message.text.split(maxsplit=1)
    if len(command_parts) < 2:
        await message.answer(
            "‚ùå –û—à–∏–±–∫–∞! –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ /pin.\n–ü—Ä–∏–º–µ—Ä: `/pin –í–∞–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ`")
        return
    pin_text = command_parts[1]  # –ë–µ—Ä–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ /pin
    # –ë–æ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º
    sent_message = await bot.send_message(chat_id=chat_id, text=pin_text)
    # –ë–æ—Ç –∑–∞–∫—Ä–µ–ø–ª—è–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.pin_chat_message(chat_id=chat_id,
                               message_id=sent_message.message_id)

    await message.answer("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")


@router.callback_query(F.data == 'catalog')
async def callback_catalog(callback: CallbackQuery):
    await callback.answer('–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤')
    await callback.message.edit_text('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é',
                                     reply_markup=await kb.builder_catalog())


@router.callback_query(F.data.startswith('item_'))
async def item_handler(callback: CallbackQuery):
    brand_name = callback.data.split('_')[-1].title()
    await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–æ–≤–∞—Ä')
    await callback.message.edit_text(f'–í—ã –≤—ã–±—Ä–∞–ª–∏ {brand_name}',
                                     reply_markup=kb.back)
